Index: moviesite/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for moviesite project.\r\n\r\nGenerated by 'django-admin startproject' using Django 3.2.7.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/3.2/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/3.2/ref/settings/\r\n\"\"\"\r\nimport os\r\nimport sys\r\nfrom pathlib import Path\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\n\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\nPROJECT_ROOT = os.path.dirname(__file__)\r\nsys.path.insert(0, os.path.join(PROJECT_ROOT, 'apps'))\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-xt!&&z-o-m1i+t)zkr78#)m$r=1sw+waz97ld$re2np^_*3)6g'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\nALLOWED_HOSTS = ['127.0.0.1']\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'debug_toolbar',\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'users.apps.UsersConfig',\r\n    'main.apps.MainConfig',\r\n    'captcha'\r\n]\r\n\r\nSTATIC_URL = '/static/'\r\n\r\nMIDDLEWARE = [\r\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'moviesite.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [os.path.join(PROJECT_ROOT, '../templates')],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'moviesite.wsgi.application'\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\r\n# Change user model\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.2/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'ru-RU'\r\n\r\nTIME_ZONE = 'Europe/Kiev'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\r\n\r\nSTATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')\r\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\r\nMEDIA_URL = '/media/'\r\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n# Debug toolbar\r\nINTERNAL_IPS = ['127.0.0.1', ]\r\n\r\n# Cache settings\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',\r\n        'LOCATION': os.path.join(BASE_DIR, 'moviesite_cache'),\r\n    }\r\n}\r\n\r\nAUTH_USER_MODEL = 'users.MyUser'\r\nCAPTCHA_IMAGE_SIZE = (200, 100)\r\nCAPTCHA_FONT_SIZE = 44
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/moviesite/settings.py b/moviesite/settings.py
--- a/moviesite/settings.py	(revision 6c181b23f9770c7571fcfcd3c22605e1077d4050)
+++ b/moviesite/settings.py	(date 1633961977871)
@@ -26,7 +26,7 @@
 SECRET_KEY = 'django-insecure-xt!&&z-o-m1i+t)zkr78#)m$r=1sw+waz97ld$re2np^_*3)6g'
 
 # SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
+DEBUG = False
 ALLOWED_HOSTS = ['127.0.0.1']
 # Application definition
 
Index: users/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth.models import AbstractUser\r\nfrom django.core.validators import MinValueValidator, MaxValueValidator\r\nfrom django.db import models\r\nfrom django.urls import reverse\r\nimport datetime as date\r\n\r\nclass MyUser(AbstractUser):\r\n    photo = models.ImageField('Фотография', upload_to='users_photo', blank=True)\r\n    birth_date = models.DateField('День Рождения', default='2002-09-20', blank=True, validators=[MinValueValidator(limit_value=date.date(1900, 1, 1)), MaxValueValidator(limit_value=date.date.today)])\r\n    age = models.PositiveSmallIntegerField(\"Возраст\", default=18, blank=True, validators=[MinValueValidator(8), MaxValueValidator(100)])\r\n    about_user = models.TextField(\"О себе\", blank=True, max_length=500)\r\n    is_published = models.BooleanField('Публичный список фильмов', default=True)\r\n    REQUIRED_FIELDS = ['email']\r\n\r\n    def get_username(self):\r\n        return str(self.username)\r\n\r\n    def get_absolute_url(self):\r\n        return reverse(\"users:profile\", kwargs={\"id\": self.pk})\r\n\r\n    class Meta():\r\n        verbose_name = \"Юзер\"\r\n        verbose_name_plural = \"Юзеры\"\r\n\r\n\r\nclass FilmUsersInfo(models.Model):\r\n    FILMLIST = (\r\n        ('Planned', 'Запланировано'),\r\n        ('Viewed', 'Прсомотрено'),\r\n        ('Abandoned', 'Брошено'),\r\n        ('None', 'Не в списке'),\r\n    )\r\n\r\n    RAITING = (\r\n        (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)\r\n    )\r\n\r\n    raiting = models.PositiveSmallIntegerField('Рейтинг', choices=RAITING, blank=True, null=True)\r\n    comment = models.TextField('Комментарий', max_length=1000, blank=True, null=True)\r\n    series = models.CharField('Список', choices=FILMLIST, blank=True, null=True, max_length=9, default=None)\r\n    users_info = models.ForeignKey('MyUser', on_delete=models.CASCADE)\r\n    film_info = models.ForeignKey('main.Film', on_delete=models.CASCADE)\r\n\r\n    def __str__(self):\r\n        return f'Review: _{self.users_info.get_username()}_ to {self.film_info.get_title()}'\r\n\r\n    class Meta():\r\n        verbose_name = \"Информация о фильме\"\r\n        verbose_name_plural = \"Информация о фильмах\"\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/models.py b/users/models.py
--- a/users/models.py	(revision 6c181b23f9770c7571fcfcd3c22605e1077d4050)
+++ b/users/models.py	(date 1633962224796)
@@ -5,7 +5,7 @@
 import datetime as date
 
 class MyUser(AbstractUser):
-    photo = models.ImageField('Фотография', upload_to='users_photo', blank=True)
+    photo = models.ImageField('Фотография', upload_to='users_photo', blank=True, default='static/users/unknow.png')
     birth_date = models.DateField('День Рождения', default='2002-09-20', blank=True, validators=[MinValueValidator(limit_value=date.date(1900, 1, 1)), MaxValueValidator(limit_value=date.date.today)])
     age = models.PositiveSmallIntegerField("Возраст", default=18, blank=True, validators=[MinValueValidator(8), MaxValueValidator(100)])
     about_user = models.TextField("О себе", blank=True, max_length=500)
